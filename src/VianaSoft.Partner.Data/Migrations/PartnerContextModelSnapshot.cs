// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VianaSoft.Partner.Data.Context;

#nullable disable

namespace VianaSoft.Partner.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class PartnerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VianaSoft.Partner.Domain.Entities.Contact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BusinessEmail")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2(7)");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsExclude")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<Guid>("PartnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PersonalEmail")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2(7)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("PartnerId");

                    b.ToTable("Contacts", (string)null);
                });

            modelBuilder.Entity("VianaSoft.Partner.Domain.Entities.Partner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2(7)");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Document")
                        .IsRequired()
                        .HasColumnType("varchar(14)");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsExclude")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2(7)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Partners", (string)null);
                });

            modelBuilder.Entity("VianaSoft.Partner.Domain.Entities.Phone", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ContactId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2(7)");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("DDDCode")
                        .HasColumnType("varchar(5)");

                    b.Property<string>("DDICode")
                        .IsRequired()
                        .HasColumnType("varchar(5)");

                    b.Property<bool?>("IsCellPhone")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsExclude")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsTelegram")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<bool?>("IsWhatsapp")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2(7)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("ContactId");

                    b.ToTable("Phones", (string)null);
                });

            modelBuilder.Entity("VianaSoft.Partner.Domain.Entities.Contact", b =>
                {
                    b.HasOne("VianaSoft.Partner.Domain.Entities.Partner", null)
                        .WithMany("Contacts")
                        .HasForeignKey("PartnerId")
                        .IsRequired();
                });

            modelBuilder.Entity("VianaSoft.Partner.Domain.Entities.Phone", b =>
                {
                    b.HasOne("VianaSoft.Partner.Domain.Entities.Contact", null)
                        .WithMany("Phones")
                        .HasForeignKey("ContactId")
                        .IsRequired();
                });

            modelBuilder.Entity("VianaSoft.Partner.Domain.Entities.Contact", b =>
                {
                    b.Navigation("Phones");
                });

            modelBuilder.Entity("VianaSoft.Partner.Domain.Entities.Partner", b =>
                {
                    b.Navigation("Contacts");
                });
#pragma warning restore 612, 618
        }
    }
}
